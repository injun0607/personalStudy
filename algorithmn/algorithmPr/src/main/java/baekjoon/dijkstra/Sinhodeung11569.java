package baekjoon.dijkstra;

/**
 * 백준 11569번 다익스트라 알고리즘 문제
 * 다익스트라 알고리즘(Dijkstra algorithm)은 어떤 변(edge)도 음수 가중치를 갖지 않는 그래프에서 주어진 출발점과 도착점 사이의 최단 경로 문제를 푸는 알고리즘이다. 다시 말해서 임의의 그래프에서 꼭짓점들이 각각 교차로를 나타내고, 변들을 교차로 사이를 연결 하는 도로의 길이를 나타낸다면, 다익스트라 알고리즘을 이용하여 두 교차로의 최단 경로를 구할 수 있다.
 *
 * 그러나 실생활에서는 각 교차로에 신호등이 있기 때문에, 교차로를 항상 지날 수 있는 것은 아니다. 그래서 최단거리가 아닌 다른 곳으로 우회하는 것이 목적지까지 더 빠르게 갈 수 있는 경우도 있다.
 *
 * 신호등은 주기 P초 단위마다 신호가 바뀐다. 어떤 교차로 i에 연결된 교차로들의 번호를 x1, x2, ..., xn (x1 < x2 < ... < xn)이라 했을 때,
 * 처음 P초간은 x1에서 온 차들만 i를 거쳐 x2, ..., xn으로 갈 수 있고, 그 다음 P초간은 x2 에서 온 차들만 i를 거쳐 x1, x3, ..., xn으로 갈 수 있다.
 * 이런 식으로 P초마다 교차로 번호 오름차순으로 교차로 i를 이용하여 다른 교차로로 통행할 수 있으며, n×P초가 지나면 다시 x1부터 P초간 교차로 i를 이용할 수 있게 된다.
 */
public class Sinhodeung11569 {
    /**
     * 1. 다음 노드와 연결된 시간을 구한다음 만약 다음노드의 신호 대기시간이 연결시간보다 길다면 가지 못한다.
     * 2. 다음 노드가 만약 시간이
     */
}
